// RUN: zamacompiler %s --passes hlfhe-to-midlfhe 2>&1| FileCheck %s

// CHECK-LABEL: func @apply_lookup_table_cst(%arg0: !MidLFHE.glwe<{_,_,_}{7}>) -> !MidLFHE.glwe<{_,_,_}{7}>
func @apply_lookup_table_cst(%arg0: !HLFHE.eint<7>) -> !HLFHE.eint<7> {
  // CHECK-NEXT: %[[TABLE:.*]] = constant dense<"0xtensor<128xi64>
  // CHECK-NEXT: %[[V0:.*]] = "MidLFHE.apply_lookup_table"(%arg0, %[[TABLE]]) {baseLogBS = -1 : i32, baseLogKS = -1 : i32, k = -1 : i32, levelBS = -1 : i32, levelKS = -1 : i32, outputSizeKS = -1 : i32, polynomialSize = -1 : i32} : (!MidLFHE.glwe<{_,_,_}{7}>, tensor<128xi64>) -> !MidLFHE.glwe<{_,_,_}{7}>
  // CHECK-NEXT: return %[[V0]] : !MidLFHE.glwe<{_,_,_}{7}>
  %tlu = std.constant dense<[0, 72057594037927936, 144115188075855872, 216172782113783808, 288230376151711744, 360287970189639680, 432345564227567616, 504403158265495552, 576460752303423488, 648518346341351424, 720575940379279360, 792633534417207296, 864691128455135232, 936748722493063168, 1008806316530991104, 1080863910568919040, 1152921504606846976, 1224979098644774912, 1297036692682702848, 1369094286720630784, 1441151880758558720, 1513209474796486656, 1585267068834414592, 1657324662872342528, 1729382256910270464, 1801439850948198400, 1873497444986126336, 1945555039024054272, 2017612633061982208, 2089670227099910144, 2161727821137838080, 2233785415175766016, 2305843009213693952, 2377900603251621888, 2449958197289549824, 2522015791327477760, 2594073385365405696, 2666130979403333632, 2738188573441261568, 2810246167479189504, 2882303761517117440, 2954361355555045376, 3026418949592973312, 3098476543630901248, 3170534137668829184, 3242591731706757120, 3314649325744685056, 3386706919782612992, 3458764513820540928, 3530822107858468864, 3602879701896396800, 3674937295934324736, 3746994889972252672, 3819052484010180608, 3891110078048108544, 3963167672086036480, 4035225266123964416, 4107282860161892352, 4179340454199820288, 4251398048237748224, 4323455642275676160, 4395513236313604096, 4467570830351532032, 4539628424389459968, 4611686018427387904, 4683743612465315840, 4755801206503243776, 4827858800541171712, 4899916394579099648, 4971973988617027584, 5044031582654955520, 5116089176692883456, 5188146770730811392, 5260204364768739328, 5332261958806667264, 5404319552844595200, 5476377146882523136, 5548434740920451072, 5620492334958379008, 5692549928996306944, 5764607523034234880, 5836665117072162816, 5908722711110090752, 5980780305148018688, 6052837899185946624, 6124895493223874560, 6196953087261802496, 6269010681299730432, 6341068275337658368, 6413125869375586304, 6485183463413514240, 6557241057451442176, 6629298651489370112, 6701356245527298048, 6773413839565225984, 6845471433603153920, 6917529027641081856, 6989586621679009792, 7061644215716937728, 7133701809754865664, 7205759403792793600, 7277816997830721536, 7349874591868649472, 7421932185906577408, 7493989779944505344, 7566047373982433280, 7638104968020361216, 7710162562058289152, 7782220156096217088, 7854277750134145024, 7926335344172072960, 7998392938210000896, 8070450532247928832, 8142508126285856768, 8214565720323784704, 8286623314361712640, 8358680908399640576, 8430738502437568512, 8502796096475496448, 8574853690513424384, 8646911284551352320, 8718968878589280256, 8791026472627208192, 8863084066665136128, 8935141660703064064, 9007199254740992000, 9079256848778919936, 9151314442816847872]> : tensor<128xi64>
  %1 = "HLFHE.apply_lookup_table"(%arg0, %tlu): (!HLFHE.eint<7>, tensor<128xi64>) -> (!HLFHE.eint<7>)
  return %1: !HLFHE.eint<7>
}