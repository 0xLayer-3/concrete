FROM ghcr.io/zama-ai/zamalang-compiler:967fda07a05b6a410fee2027514a7114bdf781e9 as builder

RUN apt-get update && apt-get upgrade --no-install-recommends -y && \
    apt-get install --no-install-recommends -y \
    python3.8 \
    python-is-python3 && \
    rm -rf /var/lib/apt/lists/* && \
    python3 -m pip install --no-cache-dir --upgrade pip wheel setuptools && \
    python3 -m pip install --no-cache-dir poetry

WORKDIR /build
COPY concrete ./concrete
COPY pyproject.toml ./pyproject.toml

RUN poetry build --format wheel

FROM ghcr.io/zama-ai/zamalang-compiler:967fda07a05b6a410fee2027514a7114bdf781e9

RUN mkdir /pkg && mkdir /app
WORKDIR /pkg
COPY --from=builder /build/dist/*.whl .
COPY docker/release_resources/release_requirements.txt .
COPY torch_requirements.txt .

RUN apt-get update && apt-get upgrade --no-install-recommends -y && \
    apt-get install --no-install-recommends -y \
    python3.8 \
    python3.8-tk \
    python-is-python3 \
    graphviz* && \
    rm -rf /var/lib/apt/lists/* && \
    python3 -m pip install --no-cache-dir --upgrade pip wheel setuptools && \
    echo "export LD_PRELOAD=/compiler/build/lib/Runtime/libZamalangRuntime.so" >> /root/.bashrc && \
    echo "export MPLBACKEND=TkAgg" >> /root/.bashrc && \
    python3 -m pip install --no-cache-dir ./*.whl && \
    python3 -m pip install --no-cache-dir -r torch_requirements.txt \
    -f https://download.pytorch.org/whl/torch_stable.html && \
    python3 -m pip install --no-cache-dir -r release_requirements.txt

WORKDIR /app
COPY docker/release_resources/entry_point.sh ./entry_point.sh
RUN mkdir /data

WORKDIR /data
VOLUME [ "/data" ]

CMD ["/bin/bash", "-i", "/app/entry_point.sh"]
